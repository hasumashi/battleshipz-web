@use "sass:math";

/*
 * Helper SCSS for making layouts with Flexbox
 */

/*
 * Flexbox
 */

/* Container classes */
@mixin container-classes($prefix: "") {
    .#{$prefix}flex, .#{$prefix}row, .#{$prefix}column {
        display: flex;
    }

    .#{$prefix}flex-inline {
        display: inline-flex;
    }

    .#{$prefix}row             { flex-direction: row; }
    .#{$prefix}column          { flex-direction: column; }
    .#{$prefix}row-reverse     { flex-direction: row-reverse; }
    .#{$prefix}column-reverse  { flex-direction: column-reverse; }

    .#{$prefix}wrap            { flex-wrap: wrap; }
    .#{$prefix}wrap-reverse    { flex-wrap: wrap-reverse; }

    // aligning along main/cross axis
    .#{$prefix}align-start          { justify-content: flex-start; }
    .#{$prefix}align-end            { justify-content: flex-end; }
    .#{$prefix}align-center         { justify-content: center; }
    .#{$prefix}align-space-around   { justify-content: space-around; }
    .#{$prefix}align-space-between  { justify-content: space-between; }
    .#{$prefix}align-space-evenly   { justify-content: space-evenly; }

    .#{$prefix}align-cross-stretch  { align-items: stretch; }
    .#{$prefix}align-cross-start    { align-items: flex-start; }
    .#{$prefix}align-cross-end      { align-items: flex-end; }
    .#{$prefix}align-cross-center   { align-items: center; }
    .#{$prefix}align-cross-baseline { align-items: baseline; }

    .#{$prefix}align-self-stretch  { align-self: stretch; }
    .#{$prefix}align-self-start    { align-self: flex-start; }
    .#{$prefix}align-self-end      { align-self: flex-end; }
    .#{$prefix}align-self-center   { align-self: center; }
    .#{$prefix}align-self-baseline { align-self: baseline; }
}

/* Item classes */
@mixin item-classes($prefix: "") {
    .#{$prefix}grow {
        flex-grow: 1;
    }

    .#{$prefix}no-shrink {
        flex-shrink: 0;
    }

    .#{$prefix}size-absolute {
        flex-basis: 0;
    }

    .row .#{$prefix}size-1-1,
    .#{$prefix}row .#{$prefix}size-1-1 {
        flex: 0 0 100%;
        max-width: 100%;
    }
    .column .#{$prefix}size-1-1,
    .#{$prefix}column .#{$prefix}size-1-1 {
        flex: 0 0 100%;
        max-height: 100%;
    }
}

@mixin size-X-Y($prefix: "") {
    .#{$prefix}h-1-1 {
        height: 100%;
    }

    @for $y from 2 through 6 {
        @for $x from 1 through $y - 1 {
            $size: math.div($x, $y) * 100%;
            .row > .#{$prefix}size-#{$x}-#{$y} {
                flex: 0 0 $size;
                max-width: $size;
            }
            .column > .#{$prefix}size-#{$x}-#{$y} {
                flex: 0 0 $size;
                max-height: $size;
            }
        }
    }
}

@mixin order-N {
    @for $i from 1 through 6 {
        .order-#{$i} {
            order: $i;
        }
    }
}


/*
 * General helper classes
 */

@mixin helper-classes($prefix: "") {
    .#{$prefix}text-left   { text-align: left; }
    .#{$prefix}text-center { text-align: center; }
    .#{$prefix}text-right  { text-align: right; }

    .#{$prefix}d-block     { display: block; }
    .#{$prefix}d-inline    { display: inline; }

    .#{$prefix}margin-center {
        margin-left: auto;
        margin-right: auto;
    }

    .#{$prefix}padding {
        padding: 1rem;
    }

    .#{$prefix}no-select {
        user-select: none;
        -webkit-user-select: none;
        -moz-user-select: none;

        pointer-events: none;
    }
}

/* Main */
@include container-classes();
@include item-classes();
@include helper-classes();
@include size-X-Y();
@include order-N;


@media (max-width: 425px) {
    @include container-classes("sm-");
    @include item-classes("sm-");
    @include helper-classes("sm-");
    @include size-X-Y("sm-");
    // @include order-N;

    .sm-hide {
        display: none;
    }
}

@media (min-width: 1024px) {
    @include container-classes("lg-");
    @include item-classes("lg-");
    @include helper-classes("lg-");
    @include size-X-Y("lg-");
    // @include order-N;
}
